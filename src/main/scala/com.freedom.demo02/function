函数的定义：
def 函数名（参数: 类型 ...）: 返回值类型 = {函数体}
 1）结果类型可以省略，但是一些特殊情况，必须写，如在函数递归时，必须写结果类型。
 2）函数体只有一个语句时，可以省略花括号。
 3）Unit 类似java的void
 4)scala方法参数重要特征，他们都是val,不是var ,不能在方法内部重新赋值。
 5）如果没有显示的返回语句，scala方法将返回方法中最后一次计算得到的值。
 6）def add (b: Byte):Unit = { sum += b}
    def add (b: Byte) :Unit = sum += b  //单个表达式去掉花括号。
    def add (b: Byte) {sum += b } //如果函数体的作用只是为了外部值或者io操作。
    这种写法结果类型为Unit,其他的结果类型会转化成Unit类型，原值丢弃.

 分号推断:
  1)语句末的分号可选.一行仅一条语句可以不加.
  2)含有多条语句,分号必须加.

  单列对象: singletion
  1)scala 不能定义静态成员.能定义单例对象.
  2)当单例对象与某个类共享同一个名称时,为这个类的伴生对象,必须定义在一个源文件中.
  3)伴生类和对象能相互访问私有成员.
  4)可以通过单例对象名.方法名.
  5)单例对象与类的区别,单例对象不能带参数,
  6)任何含有main方法的单例对象都可以作为程序的入口点.
  7)object直接继承application,可以不写main方法,直接写执行体在{}中。

  包的引用:
  1)每个scala源文件都隐含了对包java.lang,包scala,以及单例对象oredef的成员引用.
  2)







